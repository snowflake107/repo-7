"use strict";(self.webpackChunkcosmos_sdk_docs=self.webpackChunkcosmos_sdk_docs||[]).push([[2523],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>h});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(t),m=r,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return t?a.createElement(h,i(i({ref:n},c),{},{components:t})):a.createElement(h,i({ref:n},c))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},78989:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=t(87462),r=(t(67294),t(3905));const o={sidebar_position:1},i="Hubl",l={unversionedId:"build/tooling/hubl",id:"build/tooling/hubl",title:"Hubl",description:"Hubl is a tool that allows you to query any Cosmos SDK based blockchain.",source:"@site/docs/build/tooling/03-hubl.md",sourceDirName:"build/tooling",slug:"/build/tooling/hubl",permalink:"/main/build/tooling/hubl",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"buildSidebar",previous:{title:"Confix",permalink:"/main/build/tooling/confix"},next:{title:"Architecture Decision Records (ADR)",permalink:"/main/build/architecture/"}},s={},u=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Add chain",id:"add-chain",level:3},{value:"Query",id:"query",level:3}],c={toc:u},p="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hubl"},"Hubl"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Hubl")," is a tool that allows you to query any Cosmos SDK based blockchain.\nIt takes advantage of the new ",(0,r.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/main/learn/advanced/autocli"},"AutoCLI")," feature of the Cosmos SDK."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"Hubl can be installed using ",(0,r.kt)("inlineCode",{parentName:"p"},"go install"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"go install cosmossdk.io/tools/hubl/cmd/hubl@latest\n")),(0,r.kt)("p",null,"Or build from source:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"git clone --depth=1 https://github.com/cosmos/cosmos-sdk\nmake hubl\n")),(0,r.kt)("p",null,"The binary will be located in ",(0,r.kt)("inlineCode",{parentName:"p"},"tools/hubl"),"."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hubl --help\n")),(0,r.kt)("h3",{id:"add-chain"},"Add chain"),(0,r.kt)("p",null,"To configure a new chain just run this command using the --init flag and the name of the chain as it's listed in the chain registry (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cosmos/chain-registry"},"https://github.com/cosmos/chain-registry"),")."),(0,r.kt)("p",null,"If the chain is not listed in the chain registry, you can use any unique name."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hubl init [chain-name]\nhubl init regen\n")),(0,r.kt)("p",null,"The chain configuration is stored in ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.hubl/config.toml"),"."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"When using an insecure gRPC endpoint, change the ",(0,r.kt)("inlineCode",{parentName:"p"},"insecure")," field to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," in the config file."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-toml"},"[chains]\n[chains.regen]\n[[chains.regen.trusted-grpc-endpoints]]\nendpoint = 'localhost:9090'\ninsecure = true\n")),(0,r.kt)("p",{parentName:"admonition"},"Or use the ",(0,r.kt)("inlineCode",{parentName:"p"},"--insecure")," flag:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hubl init regen --insecure\n"))),(0,r.kt)("h3",{id:"query"},"Query"),(0,r.kt)("p",null,"To query a chain, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"query")," command.\nThen specify which module you want to query and the query itself."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"hubl regen query auth module-accounts\n")))}d.isMDXComponent=!0}}]);