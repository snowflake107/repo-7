"use strict";(self.webpackChunkcosmos_sdk_docs=self.webpackChunkcosmos_sdk_docs||[]).push([[44657],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(67294);function s(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){s(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=d(a),u=s,h=p["".concat(l,".").concat(u)]||p[u]||m[u]||r;return a?n.createElement(h,o(o({ref:t},c),{},{components:a})):n.createElement(h,o({ref:t},c))}));function h(e,t){var a=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=a.length,o=new Array(r);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:s,o[1]=i;for(var d=2;d<r;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},96387:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var n=a(87462),s=(a(67294),a(3905));const r={},o="RFC 003: Cross Language Account/Module Execution Model",i={unversionedId:"build/rfc/rfc-003-crosslang",id:"build/rfc/rfc-003-crosslang",title:"RFC 003: Cross Language Account/Module Execution Model",description:"Changelog",source:"@site/docs/build/rfc/rfc-003-crosslang.md",sourceDirName:"build/rfc",slug:"/build/rfc/rfc-003-crosslang",permalink:"/main/build/rfc/rfc-003-crosslang",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"buildSidebar",previous:{title:"RFC 002: Zero-Copy Encoding",permalink:"/main/build/rfc/rfc-002-zero-copy-encoding"},next:{title:"RFC 004: Accounts",permalink:"/main/build/rfc/rfc-004-accounts"}},l={},d=[{value:"Changelog",id:"changelog",level:2},{value:"Background",id:"background",level:2},{value:"Proposal",id:"proposal",level:2},{value:"Account",id:"account",level:3},{value:"Address",id:"address",level:3},{value:"Message",id:"message",level:3},{value:"Account Handler",id:"account-handler",level:3},{value:"Message Request",id:"message-request",level:3},{value:"Modules and Modules Messages",id:"modules-and-modules-messages",level:3},{value:"Account Handler and Message Metadata",id:"account-handler-and-message-metadata",level:3},{value:"Account Lifecycle",id:"account-lifecycle",level:3},{value:"Hypervisor and Virtual Machines",id:"hypervisor-and-virtual-machines",level:3},{value:"State and Volatility",id:"state-and-volatility",level:3},{value:"Management of Account Lifecycle with the Hypervisor",id:"management-of-account-lifecycle-with-the-hypervisor",level:3},{value:"Module Lifecycle &amp; Module Messages",id:"module-lifecycle--module-messages",level:3},{value:"Authorization and Delegated Execution",id:"authorization-and-delegated-execution",level:3},{value:"Message Data and Packet Specification",id:"message-data-and-packet-specification",level:3},{value:"Abandoned Ideas (Optional)",id:"abandoned-ideas-optional",level:2},{value:"Decision",id:"decision",level:2},{value:"Consequences (optional)",id:"consequences-optional",level:2},{value:"Backwards Compatibility",id:"backwards-compatibility",level:3},{value:"Positive",id:"positive",level:3},{value:"Negative",id:"negative",level:3},{value:"Neutral",id:"neutral",level:3},{value:"References",id:"references",level:3},{value:"Discussion",id:"discussion",level:2}],c={toc:d},p="wrapper";function m(e){let{components:t,...a}=e;return(0,s.kt)(p,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"rfc-003-cross-language-accountmodule-execution-model"},"RFC 003: Cross Language Account/Module Execution Model"),(0,s.kt)("h2",{id:"changelog"},"Changelog"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"2024-08-09: Reworked initial draft (previous work was in ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/cosmos/cosmos-sdk/pull/15410"},"https://github.com/cosmos/cosmos-sdk/pull/15410"),")")),(0,s.kt)("h2",{id:"background"},"Background"),(0,s.kt)("p",null,"The Cosmos SDK has historically been a Golang only framework for building blockchain applications.\nHowever, discussions about supporting additional programming languages and virtual machine environments\nhave been underway since early 2023. Recently, we have identified the following key target user groups:\nRecently we have identified the following key target user groups:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"projects that want to primarily target a single programming language and virtual machine environment besides Golang but who still want to use Cosmos SDK internals for consensus and storage"),(0,s.kt)("li",{parentName:"ol"},"projects that want to integrate multiple programming languages and virtual machine environments into an integrated application")),(0,s.kt)("p",null,"While these two user groups may have substantially different needs,\nthe goals of the second group are more challenging to support and require a more clearly specified unified design."),(0,s.kt)("p",null,"This RFC primarily attempts to address the needs of the second group.\nHowever, in doing so, it also intends to address the needs of the first group as we will likely build many of the components needed for this group by building an integrated cross-language, cross-VM framework.\nThose needs of the first group which are not satisfactorily addressed by the cross-language framework should be addressed in separate RFCs."),(0,s.kt)("p",null,"Prior work on cross-language support in the SDK includes:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/cosmos/cosmos-sdk/pull/15410"},"RFC 003: Language-independent Module Semantics & ABI"),": an earlier, significantly different and unmerged version of this RFC."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/main/build/rfc/rfc-002-zero-copy-encoding"},"RFC 002: Zero Copy Encoding"),": a zero-copy encoding specification for ProtoBuf messages, which was partly implemented and may or may not still be relevant to the current work.")),(0,s.kt)("p",null,"Also, this design largely builds on the existing ",(0,s.kt)("inlineCode",{parentName:"p"},"x/accounts")," module and extends that paradigm to environments beyond just Golang.\nThat design was specified in ",(0,s.kt)("a",{parentName:"p",href:"/main/build/rfc/rfc-004-accounts"},"RFC 004: Accounts"),"."),(0,s.kt)("h2",{id:"proposal"},"Proposal"),(0,s.kt)("p",null,"We propose a conceptual and formal model for defining ",(0,s.kt)("strong",{parentName:"p"},"accounts")," and ",(0,s.kt)("strong",{parentName:"p"},"modules")," which can interoperate with each other through ",(0,s.kt)("strong",{parentName:"p"},"messages")," in a cross-language, cross-VM environment."),(0,s.kt)("p",null,"We start with the conceptual definition of core concepts from the perspective of a developer\ntrying to write code for a module or account.\nThe formal details of how these concepts are represented in a specific coding environment may vary significantly,\nhowever, the essence should remain more or less the same in most coding environments. "),(0,s.kt)("p",null,"This specification is intentionally kept minimal as it is always easier to add features than to remove them.\nWhere possible, other layers of the system should be specified in a complementary, modular way in separate specifications."),(0,s.kt)("h3",{id:"account"},"Account"),(0,s.kt)("p",null,"An ",(0,s.kt)("strong",{parentName:"p"},"account")," is defined as having:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"a unique ",(0,s.kt)("strong",{parentName:"li"},"address")),(0,s.kt)("li",{parentName:"ul"},"an ",(0,s.kt)("strong",{parentName:"li"},"account handler")," which is some code which can process ",(0,s.kt)("strong",{parentName:"li"},"messages")," and send ",(0,s.kt)("strong",{parentName:"li"},"messages")," to other ",(0,s.kt)("strong",{parentName:"li"},"accounts"))),(0,s.kt)("h3",{id:"address"},"Address"),(0,s.kt)("p",null,"An ",(0,s.kt)("strong",{parentName:"p"},"address")," is defined as a variable-length byte array of up to 63 bytes\nso that an address can be represented as a 64-byte array with the first byte indicating the length of the address."),(0,s.kt)("h3",{id:"message"},"Message"),(0,s.kt)("p",null,"A ",(0,s.kt)("strong",{parentName:"p"},"message")," is defined as a tuple of:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"a ",(0,s.kt)("strong",{parentName:"li"},"message name")," "),(0,s.kt)("li",{parentName:"ul"},"and ",(0,s.kt)("strong",{parentName:"li"},"message data"))),(0,s.kt)("p",null,"A ",(0,s.kt)("strong",{parentName:"p"},"message name")," is an ASCII string of up to 127 characters\nso that it can be represented as a 128-byte array with the first byte indicating the length of the string.\n",(0,s.kt)("strong",{parentName:"p"},"Message names")," can only contain letters, numbers and the special characters ",(0,s.kt)("inlineCode",{parentName:"p"},":"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"_"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"/"),", and ",(0,s.kt)("inlineCode",{parentName:"p"},"."),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Message data")," will be defined in more detail later."),(0,s.kt)("h3",{id:"account-handler"},"Account Handler"),(0,s.kt)("p",null,"The code that implements an account's message handling is known as the ",(0,s.kt)("strong",{parentName:"p"},"account handler"),". The handler receives a ",(0,s.kt)("strong",{parentName:"p"},"message request")," and can return some ",(0,s.kt)("strong",{parentName:"p"},"message response")," or an error."),(0,s.kt)("p",null,"The handler for a specific message within an ",(0,s.kt)("strong",{parentName:"p"},"account handler")," is known as a ",(0,s.kt)("strong",{parentName:"p"},"message handler"),"."),(0,s.kt)("h3",{id:"message-request"},"Message Request"),(0,s.kt)("p",null,"A ",(0,s.kt)("strong",{parentName:"p"},"message request")," contains:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"the ",(0,s.kt)("strong",{parentName:"li"},"address")," of the ",(0,s.kt)("strong",{parentName:"li"},"account")," (its own address)"),(0,s.kt)("li",{parentName:"ul"},"the ",(0,s.kt)("strong",{parentName:"li"},"address")," of the account sending the message (the ",(0,s.kt)("strong",{parentName:"li"},"caller"),"), which will be empty if the message is a query"),(0,s.kt)("li",{parentName:"ul"},"the ",(0,s.kt)("strong",{parentName:"li"},"message name")),(0,s.kt)("li",{parentName:"ul"},"the ",(0,s.kt)("strong",{parentName:"li"},"message data")),(0,s.kt)("li",{parentName:"ul"},"a 32-byte ",(0,s.kt)("strong",{parentName:"li"},"state token")),(0,s.kt)("li",{parentName:"ul"},"a 32-byte ",(0,s.kt)("strong",{parentName:"li"},"context token")),(0,s.kt)("li",{parentName:"ul"},"a ",(0,s.kt)("inlineCode",{parentName:"li"},"uint64")," ",(0,s.kt)("strong",{parentName:"li"},"gas limit"))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Message requests")," can also be prepared by ",(0,s.kt)("strong",{parentName:"p"},"account handlers")," to send ",(0,s.kt)("strong",{parentName:"p"},"messages")," to other accounts."),(0,s.kt)("h3",{id:"modules-and-modules-messages"},"Modules and Modules Messages"),(0,s.kt)("p",null,"There is a special class of ",(0,s.kt)("strong",{parentName:"p"},"message"),"s known as ",(0,s.kt)("strong",{parentName:"p"},"module messages"),",\nwhere the caller should omit the address of the receiving account.\nThe routing framework can look up the address of the receiving account based on the message name of a ",(0,s.kt)("strong",{parentName:"p"},"module message"),"."),(0,s.kt)("p",null,"Accounts which define handlers for ",(0,s.kt)("strong",{parentName:"p"},"module messages")," are known as ",(0,s.kt)("strong",{parentName:"p"},"modules"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Module messages")," are distinguished from other messages because their message name must start with the ",(0,s.kt)("inlineCode",{parentName:"p"},"module:")," prefix."),(0,s.kt)("p",null,"The special kind of account handler which handles ",(0,s.kt)("strong",{parentName:"p"},"module messages")," is known as a ",(0,s.kt)("strong",{parentName:"p"},"module handler"),".\nA ",(0,s.kt)("strong",{parentName:"p"},"module")," is thus an instance of a ",(0,s.kt)("strong",{parentName:"p"},"module handler")," with a specific address\nin the same way that an account is an instance of an account handler.\nIn addition to an address, ",(0,s.kt)("strong",{parentName:"p"},"modules")," also have a human-readable ",(0,s.kt)("strong",{parentName:"p"},"module name"),"."),(0,s.kt)("p",null,"More details on ",(0,s.kt)("strong",{parentName:"p"},"modules")," and ",(0,s.kt)("strong",{parentName:"p"},"module messages")," will be given later."),(0,s.kt)("h3",{id:"account-handler-and-message-metadata"},"Account Handler and Message Metadata"),(0,s.kt)("p",null,"Every ",(0,s.kt)("strong",{parentName:"p"},"account handler")," is expected to provide metadata which provides:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"a list of the ",(0,s.kt)("strong",{parentName:"li"},"message names")," it defines ",(0,s.kt)("strong",{parentName:"li"},"message handlers")," and for each of these, its:",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"volatility")," (described below)"),(0,s.kt)("li",{parentName:"ul"},"optional additional bytes, which are not standardized at this level"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"state config")," bytes which are sent to the ",(0,s.kt)("strong",{parentName:"li"},"state handler")," (described below) but are otherwise opaque"),(0,s.kt)("li",{parentName:"ul"},"some optional additional bytes, which are not standardized at this level")),(0,s.kt)("h3",{id:"account-lifecycle"},"Account Lifecycle"),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Accounts")," can be created, destroyed and migrated to new ",(0,s.kt)("strong",{parentName:"p"},"account handlers"),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Account handlers")," can define message handlers for the following special message name's:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"on_create"),": called when an account is created with message data containing arbitrary initialization data."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"on_migrate"),": called when an account is migrated to a new code handler. Such handlers receive structured message data specifying the old code handler so that the account can perform migration operations or return an error if migration is not possible.")),(0,s.kt)("h3",{id:"hypervisor-and-virtual-machines"},"Hypervisor and Virtual Machines"),(0,s.kt)("p",null,"Formally, a coding environment where ",(0,s.kt)("strong",{parentName:"p"},"account handlers")," are run is known as a ",(0,s.kt)("strong",{parentName:"p"},"virtual machine"),".\nThese ",(0,s.kt)("strong",{parentName:"p"},"virtual machine"),"s may or may not be sandboxed virtual machines in the traditional sense.\nFor instance, the existing Golang SDK module environment (currently specified by ",(0,s.kt)("inlineCode",{parentName:"p"},"cosmossdk.io/core"),'), will\nbe known as the "native Golang" virtual machine.\nFor consistency, however,\nwe refer to these all as ',(0,s.kt)("strong",{parentName:"p"},"virtual machines")," because from the perspective of the cross-language framework,\nthey must implement the same interface."),(0,s.kt)("p",null,"The special module which manages ",(0,s.kt)("strong",{parentName:"p"},"virtual machines")," and ",(0,s.kt)("strong",{parentName:"p"},"accounts")," is known as the ",(0,s.kt)("strong",{parentName:"p"},"hypervisor"),"."),(0,s.kt)("p",null,"Each ",(0,s.kt)("strong",{parentName:"p"},"virtual machine")," that is loaded by the ",(0,s.kt)("strong",{parentName:"p"},"hypervisor")," will get a unique ",(0,s.kt)("strong",{parentName:"p"},"machine id")," string.\nEach ",(0,s.kt)("strong",{parentName:"p"},"account handler")," that a ",(0,s.kt)("strong",{parentName:"p"},"virtual machine")," can load is referenced by a unique ",(0,s.kt)("strong",{parentName:"p"},"handler id")," string."),(0,s.kt)("p",null,"There are two forms of ",(0,s.kt)("strong",{parentName:"p"},"handler ids"),":"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"module handlers")," which take the form ",(0,s.kt)("inlineCode",{parentName:"li"},"module:<module_config_name>")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"account handlers")," which take the form ",(0,s.kt)("inlineCode",{parentName:"li"},"<machine_id>:<machine_handler_id>"),", where ",(0,s.kt)("inlineCode",{parentName:"li"},"machine_handler_id")," is a unique string scoped to the ",(0,s.kt)("strong",{parentName:"li"},"virtual machine"))),(0,s.kt)("p",null,"Each ",(0,s.kt)("strong",{parentName:"p"},"virtual machine")," must expose a list of all the ",(0,s.kt)("strong",{parentName:"p"},"module handlers")," it can run,\nand the ",(0,s.kt)("strong",{parentName:"p"},"hypervisor")," will ensure that the ",(0,s.kt)("strong",{parentName:"p"},"module handlers")," are unique across all ",(0,s.kt)("strong",{parentName:"p"},"virtual machines"),"."),(0,s.kt)("p",null,"Each ",(0,s.kt)("strong",{parentName:"p"},"virtual machine")," is expected to expose a method which takes a ",(0,s.kt)("strong",{parentName:"p"},"handler id"),"\nand returns a reference to an ",(0,s.kt)("strong",{parentName:"p"},"account handler"),"\nwhich can be used to run ",(0,s.kt)("strong",{parentName:"p"},"messages"),".\n",(0,s.kt)("strong",{parentName:"p"},"Virtual machines")," will also receive an ",(0,s.kt)("inlineCode",{parentName:"p"},"invoke")," function\nso that their ",(0,s.kt)("strong",{parentName:"p"},"account handlers")," can send messages to other ",(0,s.kt)("strong",{parentName:"p"},"accounts"),".\n",(0,s.kt)("strong",{parentName:"p"},"Virtual machines")," must also implement a method to return the metadata for each ",(0,s.kt)("strong",{parentName:"p"},"account handler")," by ",(0,s.kt)("strong",{parentName:"p"},"handler id"),"."),(0,s.kt)("h3",{id:"state-and-volatility"},"State and Volatility"),(0,s.kt)("p",null,"Accounts generally also have some mutable state, but within this specification,\nstate is mostly expected to be handled by some special state module defined by separate specifications.\nThe few main concepts of ",(0,s.kt)("strong",{parentName:"p"},"state handler"),", ",(0,s.kt)("strong",{parentName:"p"},"state token"),", ",(0,s.kt)("strong",{parentName:"p"},"state config")," and ",(0,s.kt)("strong",{parentName:"p"},"volatility")," are defined here."),(0,s.kt)("p",null,"The ",(0,s.kt)("strong",{parentName:"p"},"state handler")," is a system component which the hypervisor has a reference to,\nand which is responsible for managing the state of all accounts.\nIt only exposes the following methods to the hypervisor:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"create(account address, state config)"),": creates a new account state with the specified address and ",(0,s.kt)("strong",{parentName:"li"},"state config"),"."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"migrate(account address, new state config)"),": migrates the account state with the specified address to a new state config"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"destroy(account address)"),": destroys the account state with the specified address")),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"State config")," are optional bytes that each account handler's metadata can define which get passed to the ",(0,s.kt)("strong",{parentName:"p"},"state handler")," when an account is created.\nThese bytes can be used by the ",(0,s.kt)("strong",{parentName:"p"},"state handler")," to determine what type of state and commitment store the ",(0,s.kt)("strong",{parentName:"p"},"account")," needs."),(0,s.kt)("p",null,"A ",(0,s.kt)("strong",{parentName:"p"},"state token")," is an opaque array of 32-bytes that is passed in each message request.\nThe hypervisor has no knowledge of what this token represents or how it is created,\nbut it is expected that modules that mange state do understand this token and use it to manage all state changes\nin consistent transactions.\nAll side effects regarding state, events, etc. are expected to coordinate around the usage of this token.\nIt is possible that state modules expose methods for creating new ",(0,s.kt)("strong",{parentName:"p"},"state tokens"),"\nfor nesting transactions."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Volatility")," describes a message handler's behavior with respect to state and side effects.\nIt is an enum value that can have one of the following values:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"volatile"),": the handler can have side effects and send ",(0,s.kt)("inlineCode",{parentName:"li"},"volatile"),", ",(0,s.kt)("inlineCode",{parentName:"li"},"radonly")," or ",(0,s.kt)("inlineCode",{parentName:"li"},"pure")," messages to other accounts. Such handlers are expected to both read and write state."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"readonly"),": the handler cannot cause effects side effects and can only send ",(0,s.kt)("inlineCode",{parentName:"li"},"readonly")," or ",(0,s.kt)("inlineCode",{parentName:"li"},"pure")," messages to other accounts. Such handlers are expected to only read state."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"pure"),": the handler cannot cause any side effects and can only call other pure handlers. Such handlers are expected to neither read nor write state.")),(0,s.kt)("p",null,"The hypervisor will enforce ",(0,s.kt)("strong",{parentName:"p"},"volatility")," rules when routing messages to account handlers.\nCaller addresses are always passed to ",(0,s.kt)("inlineCode",{parentName:"p"},"volatile")," methods,\nthey are not required when calling ",(0,s.kt)("inlineCode",{parentName:"p"},"readonly")," methods but will be passed when available,\nand they are not passed at all to ",(0,s.kt)("inlineCode",{parentName:"p"},"pure")," methods."),(0,s.kt)("h3",{id:"management-of-account-lifecycle-with-the-hypervisor"},"Management of Account Lifecycle with the Hypervisor"),(0,s.kt)("p",null,"In order to manage ",(0,s.kt)("strong",{parentName:"p"},"accounts")," and their mapping to ",(0,s.kt)("strong",{parentName:"p"},"account handlers"),", the ",(0,s.kt)("strong",{parentName:"p"},"hypervisor")," contains stateful mappings for:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"account address")," to ",(0,s.kt)("strong",{parentName:"li"},"handler id")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"module name")," to module ",(0,s.kt)("strong",{parentName:"li"},"account address")," and ",(0,s.kt)("strong",{parentName:"li"},"module config")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("strong",{parentName:"li"},"message name")," to ",(0,s.kt)("strong",{parentName:"li"},"account address")," for ",(0,s.kt)("strong",{parentName:"li"},"module messages"))),(0,s.kt)("p",null,"The ",(0,s.kt)("strong",{parentName:"p"},"hypervisor")," as a first-class module itself handles the following special ",(0,s.kt)("strong",{parentName:"p"},"module messages")," to manage account\ncreation, destruction, and migration:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"create(handler_id, init_data) -> address"),": creates a new account in the specified code environment with the specified handler id and returns the address of the new account. The ",(0,s.kt)("inlineCode",{parentName:"li"},"on_create")," message is called if it is implemented by the  account. Addresses are generated deterministically by the hypervisor with a configurable algorithm which will allow public key accounts to get predictable addresses."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"destroy(address)"),": deletes the account with the specified address. ",(0,s.kt)("inlineCode",{parentName:"li"},"destroy")," can only be called by the account itself."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"migrate(address, new_handler_id)"),": migrates the account with the specified address to the new account handler. The ",(0,s.kt)("inlineCode",{parentName:"li"},"on_migrate")," message must be implemented by the new code and must not return an error for migration to succeed. ",(0,s.kt)("inlineCode",{parentName:"li"},"migrate")," can only be called by the account itself."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"force_migrate(address, new_handler_id, init_data)"),": this can be used when no ",(0,s.kt)("inlineCode",{parentName:"li"},"on_migrate")," handler can perform a proper migration to the new account handler. In this case, the old account state will be destroyed, and ",(0,s.kt)("inlineCode",{parentName:"li"},"on_create")," will be called on the new code. This is a destructive operation and should be used with caution.")),(0,s.kt)("p",null,"The ",(0,s.kt)("strong",{parentName:"p"},"hypervisor")," will call the ",(0,s.kt)("strong",{parentName:"p"},"state handler"),"'s ",(0,s.kt)("inlineCode",{parentName:"p"},"create"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"migrate"),",\nand ",(0,s.kt)("inlineCode",{parentName:"p"},"destroy")," methods as needed when accounts are created, migrated, or destroyed."),(0,s.kt)("h3",{id:"module-lifecycle--module-messages"},"Module Lifecycle & Module Messages"),(0,s.kt)("p",null,"For legacy purposes, ",(0,s.kt)("strong",{parentName:"p"},"modules")," have specific lifecycles and ",(0,s.kt)("strong",{parentName:"p"},"module messages")," have special semantics.\nA ",(0,s.kt)("strong",{parentName:"p"},"module handler")," cannot be loaded with the ",(0,s.kt)("inlineCode",{parentName:"p"},"create")," message,\nbut must be loaded by an external call to the hypervisor\nwhich includes the ",(0,s.kt)("strong",{parentName:"p"},"module name")," and ",(0,s.kt)("strong",{parentName:"p"},"module config")," bytes.\nThe existing ",(0,s.kt)("inlineCode",{parentName:"p"},"cosmos.app.v1alpha1.Config")," can be used for this purpose if desired."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Module messages")," also allow the definition of pre- and post-handlers.\nThese are special message handlers that can only be defined in ",(0,s.kt)("strong",{parentName:"p"},"module handlers"),"\nand must be prefixed by the ",(0,s.kt)("inlineCode",{parentName:"p"},"module:pre:")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"module:post:")," prefixes\nWhen modules are loaded in the hypervisor, a composite message handler will be composed using all the defined\npre- and post-handlers for a given message name in the loaded module set.\nBy default, the ordering will be done alphabetically by module name."),(0,s.kt)("h3",{id:"authorization-and-delegated-execution"},"Authorization and Delegated Execution"),(0,s.kt)("p",null,"When a message handler creates a message request, it can pass any address as the caller address,\nbut it must pass the same ",(0,s.kt)("strong",{parentName:"p"},"context token")," that it received in its message request.\nThe hypervisor will use the ",(0,s.kt)("strong",{parentName:"p"},"context token"),' to verify the "real" caller address.\nEvery nested message call will receive a new non-forgeable ',(0,s.kt)("strong",{parentName:"p"},"context token")," so that virtual machines\nand their account handlers cannot arbitrarily fool the hypervisor about the real caller address."),(0,s.kt)("p",null,"By default, the hypervisor will only allow the real caller to act as the caller."),(0,s.kt)("p",null,"There are use cases, however, for delegated authorization of messages or even for modules which can execute\na message on behalf of any account.\nTo support these, the hypervisor will accept an ",(0,s.kt)("strong",{parentName:"p"},"authorization middleware")," parameter which checks\nwhether a given real caller account (verified by the hypervisor) is authorized to act as a different caller\naccount for a given message request."),(0,s.kt)("h3",{id:"message-data-and-packet-specification"},"Message Data and Packet Specification"),(0,s.kt)("p",null,"To facilitate efficient cross-language and cross-VM message passing, the precise layout of ",(0,s.kt)("strong",{parentName:"p"},"message packets")," is important\nas it reduces the need for serialization and deserialization in the core hypervisor and virtual machine layers."),(0,s.kt)("p",null,"We start by defining a ",(0,s.kt)("strong",{parentName:"p"},"message packet")," as a 64kb (65,536 bytes) array which is aligned to a 64kb boundary.\nFor most message handlers, this single packet should be large enough to contain a full ",(0,s.kt)("strong",{parentName:"p"},"message request"),",\nincluding all ",(0,s.kt)("strong",{parentName:"p"},"message data")," as well as message return data.\nIn cases where the packet size is too small, additional buffers can be referenced from within the ",(0,s.kt)("strong",{parentName:"p"},"message packet"),"."),(0,s.kt)("p",null,"More details on the specific layout of ",(0,s.kt)("strong",{parentName:"p"},"message packets")," will be specified in a future update to this RFC\nor a separate RFC.\nFor now, we specify that within a 64kb ",(0,s.kt)("strong",{parentName:"p"},"message packet"),",\nat least 56kb will be available for ",(0,s.kt)("strong",{parentName:"p"},"message data")," and message responses."),(0,s.kt)("h2",{id:"abandoned-ideas-optional"},"Abandoned Ideas (Optional)"),(0,s.kt)("h2",{id:"decision"},"Decision"),(0,s.kt)("p",null,"Based on internal discussions, we have decided to move forward with this design. "),(0,s.kt)("h2",{id:"consequences-optional"},"Consequences (optional)"),(0,s.kt)("h3",{id:"backwards-compatibility"},"Backwards Compatibility"),(0,s.kt)("p",null,"It is intended that existing SDK modules built using ",(0,s.kt)("inlineCode",{parentName:"p"},"cosmossdk.io/core")," and\naccount handlers built with ",(0,s.kt)("inlineCode",{parentName:"p"},"cosmossdk.io/x/accounts")," can be integrated into this system with zero or minimal changes."),(0,s.kt)("h3",{id:"positive"},"Positive"),(0,s.kt)("p",null,"This design will allow native SDK modules to be built using other languages such as Rust and Zig, and\nfor modules to be executed in different virtual machine environments such as Wasm and the EVM.\nIt also extends the concept of a module to first-class accounts in the style of the existing ",(0,s.kt)("inlineCode",{parentName:"p"},"x/accounts")," module\nand EVM contracts."),(0,s.kt)("h3",{id:"negative"},"Negative"),(0,s.kt)("h3",{id:"neutral"},"Neutral"),(0,s.kt)("p",null,"Similar to other message passing designs,\nthe raw performance invoking a message handler will be slower than a golang method call as in the existing keeper paradigm."),(0,s.kt)("p",null,"However, this design does nothing to preclude the continued existence of golang native keeper passing, and it is likely\nthat we can find performance optimizations in other areas to mitigate any performance loss.\nIn addition, a cross-language, cross-VM is simply not possible without some overhead."),(0,s.kt)("h3",{id:"references"},"References"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/cosmos/cosmos-sdk/pull/15410"},"Abandoned RFC 003: Language-independent Module Semantics & ABI")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/main/build/rfc/rfc-002-zero-copy-encoding"},"RFC 002: Zero Copy Encoding")," "),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/main/build/rfc/rfc-004-accounts"},"RFC 004: Accounts"))),(0,s.kt)("h2",{id:"discussion"},"Discussion"),(0,s.kt)("p",null,'This specification does not cover many important parts of a complete system such as the encoding of message data,\nstorage, events, transaction execution, or interaction with consensus environments.\nIt is the intention of this specification to specify the minimum necessary for this layer in a modular layer.\nThe full framework should be composed of a set of independent, minimally defined layers that together\nform a "standard" execution environment, but that at the same time can be replaced and recomposed by\ndifferent applications with different needs.'),(0,s.kt)("p",null,"The basic set of standards necessary to provide a coherent framework includes:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"message encoding and naming, including compatibility with the existing protobuf-based message encoding"),(0,s.kt)("li",{parentName:"ul"},"storage"),(0,s.kt)("li",{parentName:"ul"},"events"),(0,s.kt)("li",{parentName:"ul"},"authorization middleware")))}m.isMDXComponent=!0}}]);